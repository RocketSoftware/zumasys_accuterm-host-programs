CREATE-FILE FTBP 1 3
ED MD FTPINST
DE99
F
I
PQ
HED MD FTBP
STON
HR/D    /DC/<
P
HCREATE-FILE ACCUTERMCTRL 1 3
P
HBASIC FTBP FTBPINST
P
HRUN FTBP FTBPINST
P
HBASIC FTBP FTCHK
P
HRUN FTBP FTCHK
STON
H<
HR83<
HY<
P
O
O
O
O
O
HRUN FTBP LOAD-ACCUTERM-PROGS
P
X


FI

ED FTBP FTBPINST
DE999
F
I
EQU CHKSUM TO 4876
**************************************************************************
*Copyright (c) 1991-2006 Zumasys,Inc. as an unpublished work. All rights *
*reserved. This work is the property of and embodies trade secrets and   *
*confidential information proprietary to Zumasys, Inc.  It may not be    *
*reproduced, copied, used, disclosed, transferred, adapted or modified   *
*without the express written approval of Zumasys, Inc., except as        *
*provided for in the accompanying warranty notice and licensing          *
*agreement.                                                              *
**************************************************************************
*
* FILE TRANSFER PROGRAM INSTALLATION
*
* VERSION: 5.3.3
*
**************************************************************************
*
EQU MARK TO CHAR(1), EOL TO CHAR(13), AM TO CHAR(254)
*
* CHECKSUM MY OWN SOURCE BEFORE PROCEDING
*
OPEN 'FTBP' TO FV ELSE PRINT 'Unable to open FTBP file!';STOP
READ Z FROM FV,'FTBPINST' ELSE PRINT "Unable to read item 'FTBPINST' from FTBP file!"; STOP
CHK=0
N=LEN(Z)
FOR I=INDEX(Z,AM,1) TO N
CHK=CHK+SEQ(Z[I,1])
IF CHK>=65536 THEN CHK=CHK-65536
NEXT I
IF CHK NE CHKSUM THEN PRINT 'FTBPINST checksum error!'; STOP
*
* PROMPT FOR PICKBP PATH
*
PROMPT ''
GOSUB 3000
IF PATH[LEN(PATH),1]='\' THEN
PATH=PATH:'PICKBP'
PRINT 'Path to load host programs from (':PATH:') :':;INPUT ANS
IF ANS NE '' THEN PATH=ANS
END ELSE
PRINT 'Loading host programs from ':PATH
END
IF PATH[LEN(PATH),1] NE '\' THEN PATH=PATH:'\'
*
* ISSUE REMOTE UPLOAD COMMAND
*
PRINT CHAR(27):CHAR(2):'UKT;':PATH:'*.':EOL:
*
* INITIALIZE GLOBAL ELEMENTS
*
O.PKT=''
O.TYP=''
I.PKT=''
I.TYP=''
O.TYP='N'
SEQN=0
RSN=0
EBP=0
ECHO OFF
*
* RECEIVE FILES
*
GOSUB 2100; * GET SEND INITIATION (S PACKET)
IF I.TYP NE 'S' THEN GOTO 999
O.RAW='~( @-#'
IF I.RAW[7,1]='&' OR I.RAW[7,1]='Y' THEN EBP=1; O.RAW=O.RAW:'&'
O.TYP='Y'
GOSUB 2300; * SEND ACK WITH INITIALIZE (Y PACKET)
O.TYP='Y'
O.RAW=''
LOOP
SEQN=REM(SEQN+1,64)
GOSUB 2200; * GET FILE HEADER (F PACKET)
UNTIL I.TYP EQ 'B' DO
IF I.TYP NE 'F' THEN GOTO 999
GOSUB 2300; * SEND ACK (Y PACKET)
ID=I.DATA
ITEM=''
LOOP
SEQN=REM(SEQN+1,64)
GOSUB 2200; * GET DATA (D PACKET) OR EOF (Z PACKET)
WHILE I.TYP EQ 'D' DO
GOSUB 2300; * SEND ACK (Y PACKET)
ITEM=ITEM:I.DATA
REPEAT
IF I.TYP NE 'Z' THEN GOTO 999
GOSUB 2300; * SEND ACK (Y PACKET)
IF ITEM[LEN(ITEM),1] EQ AM THEN ITEM=ITEM[1,LEN(ITEM)-1]
WRITE ITEM ON FV,ID
REPEAT
GOSUB 2300; * SEND ACK (Y PACKET)
ECHO ON
STOP
*
999 * ERROR
*
O.TYP='E'
O.RAW=''
GOSUB 2300
ECHO ON
PRINT
PRINT 'Error during file transfer! Please try again.'
STOP
*
2100 * RECEIVE RAW PACKET
*
FOR TRY=1 TO 5
INPUT I.PKT:
K=INDEX(I.PKT,MARK,1)
IF K THEN
IF K>1 THEN I.PKT=I.PKT[K,999999]
RSN=SEQ(I.PKT[3,1])-32
I.TYP=I.PKT[4,1]
I.LEN=SEQ(I.PKT[2,1])-31
IF LEN(I.PKT) > I.LEN THEN
IF I.TYP NE O.TYP THEN
CHK=0
FOR K=2 TO I.LEN
CHK=CHK+SEQ(I.PKT[K,1])
NEXT K
CHK=REM(CHK+INT(REM(CHK,256)/64),64)+32
IF CHK EQ SEQ(I.PKT[I.LEN+1,1]) THEN
IF I.TYP EQ 'N' THEN
IF RSN EQ REM(SEQN+1,64) THEN
I.TYP='Y'
RSN=SEQN
I.LEN=0
I.RAW=''
RETURN
END
END ELSE
IF RSN EQ SEQN THEN
I.LEN=I.LEN-4
I.RAW=I.PKT[5,I.LEN]
RETURN
END
END
END
END
END ELSE
I.LEN=LEN(I.PKT)-4; IF I.LEN<0 THEN I.LEN=0
END
IF I.TYP EQ 'E' THEN I.RAW=I.RAW[5,I.LEN]; RETURN
END
IF I.PKT EQ 'END' OR I.PKT EQ 'end' THEN I.TYP=''; STAT='Abort!';GOTO 999
IF SEQN < 3 OR I.TYP NE 'Y' OR REM(RSN+1,64) NE SEQN THEN
IF O.PKT EQ '' THEN
O.RAW=''; O.TYP='N'; GOSUB 2300
END ELSE
PRINT '':(O.PKT:EOL):
END
END
NEXT TRY
I.TYP='Q'
I.RAW=''
I.LEN=0
RETURN
*
2200 * RECEIVE DECODED PACKET
*
GOSUB 2100
I.DATA=''
IF EBP THEN
LOOP
K1=INDEX(I.RAW,'&',1)
K2=INDEX(I.RAW,'#',1)
WHILE K1+K2 DO
IF K1>0 AND K2>0 THEN
IF K2<K1 THEN K=K2 ELSE K=K1
END ELSE
IF K1 THEN K=K1 ELSE K=K2
END
K3=K+2
IF I.RAW[K,1]='&' THEN
C=SEQ(I.RAW[K+1,1])
IF C>128 THEN C=C-128
IF C=35 THEN
C=SEQ(I.RAW[K+2,1])
BEGIN CASE
CASE C=63; CC=CHAR(255)
CASE C>63 AND C<96; CC=CHAR(C+192)
CASE 1; CC=CHAR(C+128)
END CASE
K3=K+3
END ELSE
CC=CHAR(C+128)
END
END ELSE
C=SEQ(I.RAW[K+1,1])
BEGIN CASE
CASE C=74; CC=AM
CASE C=77; CC=''
CASE C=63; CC=CHAR(127)
CASE C>63 AND C<96; CC=CHAR(C-64)
CASE 1; CC=CHAR(C)
END CASE
END
I.DATA=I.DATA:I.RAW[1,K-1]:CC
I.RAW=I.RAW[K3,999999]
REPEAT
END ELSE
LOOP
K=INDEX(I.RAW,'#',1)
WHILE K DO
C=SEQ(I.RAW[K+1,1])
BEGIN CASE
CASE C=74; CC=AM
CASE C=77; CC=''
CASE C=63; CC=CHAR(127)
CASE C>63 AND C<96; CC=CHAR(C-64)
CASE 1; CC=CHAR(C)
END CASE
I.DATA=I.DATA:I.RAW[1,K-1]:CC
I.RAW=I.RAW[K+2,999999]
REPEAT
END
I.DATA=I.DATA:I.RAW
RETURN
*
2300 * SEND RAW DATA PACKET
*
O.LEN=LEN(O.RAW)
2310 *
CHK=O.LEN+SEQN+SEQ(O.TYP)+67
FOR K=1 TO O.LEN
CHK=CHK+SEQ(O.RAW[K,1])
NEXT K
CHK=REM(CHK+INT(REM(CHK,256)/64),64)
O.PKT=MARK:CHAR(O.LEN+35):CHAR(SEQN+32):O.TYP:O.RAW:CHAR(CHK+32)
PRINT '':(O.PKT:EOL):
RETURN
*
3000 * GET PICKBP PATH
*
ECHO OFF
PRINT CHAR(27):CHAR(2):'I':
INPUT X,1:
IF X=CHAR(26) THEN
* EAT ASCII EOF IN CASE ASCII UPLOAD USED FOR INITIAL INSTALL
INPUT ANS: ;* WAIT FOR USER TO PRESS ENTER AFTER CLOSING XFER STATUS
PRINT CHAR(27):CHAR(2):'I':
X=''
END
INPUT ANS:
ANS=OCONV(X:ANS,'MCU')
IF ANS[1,8]='ACCUTERM' AND FIELD(ANS,' ',2) MATCHES '1N.0X' AND FIELD(ANS,' ',2) >= 4 THEN
PRINT CHAR(27):CHAR(2):'%0':
INPUT PATH:
PATH=OCONV(PATH,'MCU')
IF PATH[LEN(PATH),1]<>'\' THEN PATH=PATH:'\'
IF FIELD(ANS,' ',2) >= 5 THEN
PRINT CHAR(27):CHAR(2):'?':
INPUT ANS:
IF INDEX(FIELD(ANS,'*',4),'S',1) THEN
SCR='On Error Resume Next'
SCR=SCR:CHAR(25):'X=0'
SCR=SCR:CHAR(25):'X=GetAttr("':PATH:'PICKBP")'
SCR=SCR:CHAR(25):'InitSession.Output CStr((X And 16) / 16) & Chr$(13)'
PRINT CHAR(27):CHAR(2):'P':SCR:CHAR(13):
INPUT ANS:
IF ANS > 0 THEN PATH=PATH:'PICKBP'
END
END
END ELSE
IF INDEX(ANS,'/WIN32',1) THEN
PRINT CHAR(27):CHAR(2):'PINITSESSION.OUTPUT CURDIR$ & CHR$(13)':CHAR(13):
INPUT ANS:
PATH=OCONV(ANS,'MCU')
IF PATH[LEN(PATH),1]<>'\' THEN PATH=PATH:'\'
END ELSE
IF INDEX(ANS,'/WIN 2',1) THEN
PRINT CHAR(27):CHAR(2):'PINITSESSION.OUTPUT APPFILENAME$("") & CHR$(13)':CHAR(13):
INPUT ANS:
N=COUNT(ANS,'\')
IF N>0 THEN ANS=ANS[1,INDEX(ANS,'\',N)] ELSE
IF ANS<>'' THEN ANS=ANS:'\' ELSE ANS='C:\ATWIN\'
END
PATH=OCONV(ANS,'MCU')
END ELSE
IF INDEX(ANS,'/WIN',1) THEN
PATH = 'C:\ATWIN\'
END ELSE
PATH='C:\ACCUTERM\'
END
END
END
END
ECHO ON
RETURN
END


FI


FTPINST
