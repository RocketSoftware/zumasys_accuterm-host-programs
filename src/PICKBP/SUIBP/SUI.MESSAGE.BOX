SUBROUTINE SUI.MESSAGE.BOX(Left, Top, Width, Height, Message, Captions, HotKeys, FuncKeys, Opts, Btn, RtnCom, MAT TermDef)
**************************************************************************
*Copyright (c) 2004 Zumasys, Inc. as an unpublished work. All rights     *
*reserved. You are free to use this code within your own applications,   *
*but you are expressly forbidden from selling or otherwise distributing  *
*this code without prior written consent. Portions based on original     *
*design by Joe Goldthwaite.                                              *
**************************************************************************
*
* MODULE: SUI.MESSAGE.BOX
* AUTHOR: PJS
* VERSION: 1.0.1
* CREATED: 06/01/2004
* UPDATED: 08/03/2004
*
* MAINTENANCE RECORD:
*
* 1.0.1
*  PJS 08/03/2004
*   If Height argument is zero, calculate the height required to
*   display the box from the message text.
*
*************************************************************************
*************************************************************************
*
* SMART USER INTERFACE: Display Message Box
*
*************************************************************************
*************************************************************************
*
*   Input Interface:
*
*    Left, Top: upper-left corner of box
*
*    Width, Height: size of box. If Height is zero, the height is
*              computed from the message text.
*
*    Message:  message to display in box. Multiple lines separated by
*              value-marks.
*
*    Captions: multi-valued list of button captions.
*
*    HotKeys:  multi-valued list of unique single letter HotKeys. If the
*              HotKey letter for a button is pressed, that button will
*              become the "active" button.
*
*    FuncKeys: multi-valued list of function key command numbers
*              corresponding to the button list. If the associated
*              function key is pressed, Btn is set to the button
*              number and this routine is exited.
*
*    Opts:     B = Beep
*              D = Double-line frame border
*              H = Highlight text using Active attribute
*
*    Btn:      number of button which is currently active. If zero, then
*              the first button is the active button.
*
*    TermDef:  terminal definitions as set up by SUI.GET.TERM
*
*
*   Output Interface:
*
*    Btn:     active button number when routine exits.
*
*    RtnCom:  command code that caused this routine to return. This
*             is normally zero, unless an error occurred. It also
*             may be TERM.REFRESH$ if the terminainal does not support
*             windowing.
*
*************************************************************************
*
$INCLUDE SUI.TERMDEF
$INCLUDE SUI.WINDEF
$INCLUDE SUI.CONFIG
*
EQU AM TO CHAR(254)
EQU VM TO CHAR(253)
EQU BEL TO CHAR(7)
*
IF Width < 10 OR (Height < 4 AND Height NE 0) THEN
 RtnCom = SUI.ERROR.INVSIZE$
 RETURN
END
*
* Adjust screen positions based on current window
BoxWd = Width
BoxHt = Height
IF BoxHt EQ 0 THEN
 * If Height is zero, count number of lines in text and calculate height
 LinePos = ''
 CALL SUI.FOLD.TEXT(Message, BoxWd-2, VM, LinePos, 0, 0, 0)
 BoxHt = DCOUNT(LinePos,AM) - 1 + 3
END
BegCol = Left ;* Screen beginning column
BegRow = Top ;* Screen beginning row
IF Left + BoxWd > TERM.WIDTH THEN
 BoxWd = TERM.WIDTH - Left
 IF BoxWd < 10 THEN
  RtnCom = SUI.ERROR.INVSIZE$
  RETURN
 END 
END
IF Top < 0 THEN
 RtnCom = SUI.ERROR.INVPOS$
 RETURN
END
IF Top + BoxHt > TERM.HEIGHT THEN
 BoxHt = TERM.HEIGHT - Top
 IF BoxHt < 4 THEN
  RtnCom = SUI.ERROR.INVSIZE$
  RETURN
 END
END
*
* Open a new window for the message box (if windowing not supported, fake it)
*
IF INDEX(Opts,'D',1) THEN BrdSiz = 2 ELSE BrdSiz = 1
CALL SUI.OPEN.WINDOW(BegCol, BegRow, BoxWd, BoxHt, 'F', '', BrdSiz, WinID, RtnCom, MAT TermDef)
IF RtnCom NE 0 AND RtnCom NE TERM.FAKEWIN$ THEN RETURN
* Get client size
WinInf = TERM.WINDOW<1,2>
BoxWd = WinInf<1,1,SUI.CLIWIDTH$>
BoxHt = WinInf<1,1,SUI.CLIHEIGHT$>
*
* Display the message text
*
IF INDEX(Opts,'B',1) THEN PRINT BEL:
IF INDEX(Opts,'H',1) THEN State = 1 ELSE State = 0 ;* Highlight message text?
Text = Message
IF SUICFG.NEWLINE NE VM THEN
 CONVERT VM TO SUICFG.NEWLINE IN Text
END
CALL SUI.DISPLAY.TEXT(0, 0, BoxWd, BoxHt-1 , State, 'M', Text, 0, RtnCom, MAT TermDef)
*
* Get button input
*
Finished = 0
LOOP UNTIL Finished DO
 CALL SUI.INPUT.BTNBAR(0, BoxHt-1, BoxWd, 1, '', Captions, HotKeys, 'C', Btn, '', RtnCom, MAT TermDef)
 IF RtnCom = TERM.ENTER$ THEN
  Finished = 1
 END ELSE
  LOCATE(RtnCom, FuncKeys, 1; K) THEN 
   Btn = K
   Finished = 1
  END
 END
REPEAT
*
* Close the window
*
CALL SUI.CLOSE.WINDOW(0, RtnCom, MAT TermDef)
*
RETURN
END
