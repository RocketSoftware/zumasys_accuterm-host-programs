SUBROUTINE SUI.INPUT.BUTTON(Left, Top, Width, Height, Caption, Chr, RtnCom, MAT TermDef)
**************************************************************************
*Copyright (c) 2004 Zumasys, Inc. as an unpublished work. All rights     *
*reserved. You are free to use this code within your own applications,   *
*but you are expressly forbidden from selling or otherwise distributing  *
*this code without prior written consent. Portions based on original     *
*design by Joe Goldthwaite.                                              *
**************************************************************************
*
* MODULE: SUI.INPUT.BUTTON
* AUTHOR: PJS
* VERSION: 1.0.1
* CREATED: 06/01/2004
* UPDATED: 08/03/2004
*
* MAINTENANCE RECORD:
*
* 1.0.1
*  PJS 08/03/2004
*   Draw button using SUICFG.BUTTON.ACTIVE attribute for all lines except
*   last line. Use SUICFG.BUTTON.SELECTED for last line (or only line if
*   single line button). This allows the last line of the active button
*   to be underlined, indicating which button is active.
*
*************************************************************************
*************************************************************************
*
* SMART USER INTERFACE: Command Button Input
*
*************************************************************************
*************************************************************************
*
*   Input Interface:
*
*    Left, Top: upper-left corner of button (relative to current window)
*
*    Width, Height: size of button
*
*    Caption: button caption (multi-line caption is OK - separate
*             lines with sub-value marks)
*
*    TermDef: terminal definitions as set up by SUI.GET.TERM
*
*
*   Output Interface:
*
*    Chr:     letter or digit key pressed which caused this routine to exit.
*
*    RtnCom:  command code that caused this routine to return. This
*             is normally TERM.ENTER$, TERM.TAB$, TERM.STAB$,
*             TERM.LEFT$, TERM.RIGHT$, TERM.UP$, TERM.DOWN$,
*             TERM.PGUP$, TERM.PGDN, TERM.HOME$, TERM.END$,
*             TERM.F1$ ... TERM.SF12$, or TERM.HOTKEY$.
*             TERM.SENTER$ is internally translated and returned
*             as TERM.ENTER$.
*
*************************************************************************
*
$INCLUDE SUI.TERMDEF
$INCLUDE SUI.WINDEF
$INCLUDE SUI.CONFIG
*
EQU SVM TO CHAR(252)
EQU BEL TO CHAR(7), ESC TO CHAR(27), STX TO CHAR(2), CR TO CHAR(13)
*
IF Width < 1 OR Height < 1 THEN
 RtnCom = SUI.ERROR.INVSIZE$
 RETURN
END
*
* Adjust screen positions based on current window
BtnWd = Width
BtnHt = Height
BegCol = Left ;* Screen beginning column
BegRow = Top ;* Screen beginning row
WinInf = TERM.WINDOW<1,2>
IF WinInf EQ '' THEN
 WinWd = TERM.WIDTH
 WinHt = TERM.HEIGHT
END ELSE
 BegCol = BegCol + WinInf<1,1,SUI.WINLEFT$> + WinInf<1,1,SUI.CLILEFT$>
 BegRow = BegRow + WinInf<1,1,SUI.WINTOP$> + WinInf<1,1,SUI.CLITOP$>
 WinWd = WinInf<1,1,SUI.CLIWIDTH$>
 WinHt = WinInf<1,1,SUI.CLIHEIGHT$>
END
IF Left < 0 THEN
 RtnCom = SUI.ERROR.INVPOS$
 RETURN
END
IF Left + BtnWd > WinWd THEN
 BtnWd = WinWd - Left
 IF BtnWd <= 0 OR (BtnWd < 1 AND Width > 1) THEN
  RtnCom = SUI.ERROR.INVSIZE$
  RETURN
 END 
END
IF Top < 0 THEN
 RtnCom = SUI.ERROR.INVPOS$
 RETURN
END
IF Top + BtnHt > WinHt THEN
 BtnHt = WinHt - Top
 IF BtnHt <= 0 THEN
  RtnCom = SUI.ERROR.INVSIZE$
  RETURN
 END
END
EndCol = BegCol + BtnWd - 1 ;* Ending screen column
EndRow = BegRow + BtnHt - 1 ;* Ending screen row
*
* Format the button caption
Text = Caption
IF BtnHt = 1 THEN
 CONVERT SVM TO ' ' IN Text
END
N = DCOUNT(Text,SVM)
FOR I = 1 TO BtnHt
 Spc = BtnWd - LEN(Text<1,1,I>)
 IF Spc < 0 THEN
  Text<1,1,I> = Text<1,1,I>[1,BtnWd]
 END ELSE
  Spc1 = INT(Spc / 2)
  Spc2 = Spc - Spc1
  Text<1,1,I> = SPACE(Spc1):Text<1,1,I>:SPACE(Spc2)
 END
NEXT I
*
* Set up echo, prompt & cursor
PROMPT ''
IF TERM.ECHO THEN ECHO OFF; TERM.ECHO = 0
IF NOT(TERM.CURSOR) THEN PRINT TERM.CSRON:; TERM.CURSOR = 1
PRINT TERM.CSRLINE:
IF TERM.SPECIAL NE '' THEN
 PRINT ESC:STX:'1': ;* AccuTerm mouse on
END
*
* Display button
AttrLast = -1 ;* Initialize attribute for first call to DSPBTN
Active = 1
GOSUB DSPBTN
*
* Input Loop
RtnCom = 0
LOOP
 CALL SUI.INPUT.CHAR(Chr, RtnCom, MAT TermDef)
 BEGIN CASE
  CASE RtnCom = 0
   * Printable character entered
   IF OCONV(Chr,'MCA') = Chr THEN RtnCom = TERM.HOTKEY$
   IF OCONV(Chr,'MCN') = Chr THEN RtnCom = TERM.HOTKEY$
   IF Chr EQ ' ' THEN RtnCom = TERM.ENTER$
  CASE RtnCom >= TERM.LEFTBUTTON$ AND RtnCom <= TERM.MIDBUTTON$; GOSUB GETADDR
  CASE RtnCom >= TERM.DBLLEFTBUTTON$ AND RtnCom <= TERM.DBLMIDBUTTON$; RtnCom = 0 ;* Eat
  CASE RtnCom = TERM.BKSP$; RtnCom = 0 ;* Eat
  CASE RtnCom = TERM.INS$; RtnCom = 0 ;* Eat
  CASE RtnCom = TERM.DEL$; RtnCom = 0 ;* Eat
  CASE RtnCom = TERM.SENTER$; RtnCom = TERM.ENTER$ ;* Shift+Enter -> Enter
 END CASE
UNTIL RtnCom OR Chr NE '' DO
REPEAT
Active = 0
GOSUB DSPBTN
IF TERM.ATTRTYPE NE 1 THEN PRINT TermDef(TERM.ATT$+SUICFG.DISPLAY.NORMAL):
IF TERM.SPECIAL NE '' THEN
 PRINT ESC:STX:'0': ;* AccuTerm mouse off
END
PRINT TERM.CSROFF:; TERM.CURSOR = 0
ECHO ON; TERM.ECHO = 1
RETURN
!
GETADDR: * CHECK MOUSE ADDRESS
*
MouseCol = FIELD(TERM.MOUSEADDR,'.',1)
MouseRow = FIELD(TERM.MOUSEADDR,'.',2)
IF MouseRow >= BegRow AND MouseRow <= EndRow THEN
 IF MouseCol >= BegCol AND MouseCol <= EndCol THEN
  * Mouse click = button press
  TERM.MOUSEADDR = ''
  RtnCom = TERM.ENTER$
 END
END
RETURN
!
DSPBTN: * Display button in proper visual attribute
*
IF Active THEN Attr = SUICFG.BUTTON.ACTIVE ELSE Attr = SUICFG.BUTTON.INACTIVE
Dsp = ''
IF AttrLast < 0 AND SUICFG.BUTTON.BORDER AND INDEX(TERM.SPECIAL,'B',1) THEN
 * Draw text border using AccuTerm Visual Styles 
 Dsp = Dsp:ESC:STX:'r':BegCol:',':BegRow:',':EndCol:',':EndRow:',N,':'NIRB'[SUICFG.BUTTON.BORDER+1,1]:CR
END
FOR DspRow = BegRow TO EndRow
 IF Active AND DspRow = EndRow THEN Attr = SUICFG.BUTTON.SELECTED ;* draw last line of active button underline
 IF Attr = AttrLast THEN
  Dsp = Dsp:@(BegCol,DspRow)
 END ELSE
  IF TERM.ATTRTYPE = 1 THEN
   IF EndCol >= TERM.WIDTH - 1 THEN
    IF DspRow < TERM.HEIGHT - 1 THEN Dsp = Dsp:@(0,DspRow+1):TermDef(TERM.ATT$+SUICFG.DISPLAY.NORMAL)
   END ELSE
    Dsp = Dsp:@(EndCol+1,DspRow):TermDef(TERM.ATT$+SUICFG.DISPLAY.NORMAL)
   END
   IF BegCol = 0 THEN
    IF DspRow > 0 THEN Dsp = Dsp:@(TERM.WIDTH-1,DspRow-1):TermDef(TERM.ATT$+Attr)
   END ELSE
    Dsp = Dsp:@(BegCol-1,DspRow):TermDef(TERM.ATT$+Attr)
   END
   Dsp = Dsp:@(BegCol,DspRow)
  END ELSE
   Dsp = Dsp:@(BegCol,DspRow):TermDef(TERM.ATT$+Attr)
  END
 END
 Dsp = Dsp:Text<1,1,DspRow-BegRow+1>
NEXT DspRow
Dsp = Dsp:@(BegCol,BegRow)
PRINT Dsp:
AttrLast = Attr
RETURN
END
