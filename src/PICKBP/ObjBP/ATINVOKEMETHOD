SUBROUTINE ATINVOKEMETHOD(OBJID, METHNAMES, METHARGS, RESULT, ERRMSG, OPTS)
**************************************************************************
*Copyright (c) 1998-2000 Zumasys,Inc. as an unpublished work. All rights *
*reserved. This work is the property of and embodies trade secrets and   *
*confidential information proprietary to Zumasys, Inc.  It may not be    *
*reproduced, copied, used, disclosed, transferred, adapted or modified   *
*without the express written approval of Zumasys, Inc., except as        *
*provided for in the accompanying warranty notice and licensing          *
*agreement.                                                              *
**************************************************************************
*
* MODULE: ATINVOKEMETHOD
* AUTHOR: PJS
* VERSION: 4.0.1
* CREATED: 01/01/1998
* UPDATED: 09/25/2000
*
* MAINTENANCE RECORD:
*
* 4.0.1
*  PJS 09/25/2000
*   CLEANUP FOR ACCUTERM 2000 RELEASE
*
**************************************************************************
**************************************************************************
*
* ACCUTERM OBJECT MANAGER - INVOKE METHOD
*
* CALL THIS SUBROUTINE TO INVOKE METHODS ON AN OBJECT.
* THE METHNAMES ARGUMENT IS A DYNAMIC ARRAY OF METHOD NAMES TO
* BE INVOKED, ONE NAME PER ATTRIBUTE. THE METHOD ARGUMENTS
* ARE IN CORRESPONDING ATTRIBUTES. IF A METHOD REQUIRES MULTIPLE
* ARGUMENTS, THE ARGUMENTS ARE SEPARATED BY VALUE MARKS. IF A
* METHOD RETURNS A VALUE, THE CORRESPONDING ATTRIBUTE OF RESULT
* IS UPDATED TO THE RETURNED VALUE, OTHERWISE IT IS SET TO NULL.
* IF ERRORS OCCUR, THE ERROR MESSAGES ARE RETURNED IN CORRESPONDING
* ATTRIBUTES OF THE ERRMSG ARGUMENT.
*
**************************************************************************
*
EQU AM TO CHAR(254), VM TO CHAR(253), SVM TO CHAR(252)
DIM PARAMS(30), CLIENV(10)
FOR I = 1 TO 30; PARAMS(I) = OPTS<I>; NEXT I
FOR I = 1 TO 10; CLIENV(I) = OPTS<I+30>; NEXT I
IF PARAMS(1) < 1 THEN
 ERRMSG = 'Subroutine ATINITOBJMGR must be called before using this function!'
 RETURN
END
REC = ''
N = DCOUNT(METHNAMES,AM)
FOR I = 1 TO N
 ARGS = METHARGS<I>
 LOOP K = INDEX(ARGS,VM,1) WHILE K DO ARGS = ARGS[1,K-1]:SVM:ARGS[K+1,9999] REPEAT
 REC<I> = '6':VM:OBJID:VM:METHNAMES<I>:VM:ARGS
NEXT I
RESULT = ''
CALL FTOBJREQ('a',REC,RSP,0,MAT PARAMS,MAT CLIENV)
IF RSP[1,4] EQ 'ERR:' THEN
 ERRNUM = FIELD(RSP,' ',2)
 ERRMSG = RSP[COL2()+1,9999]
 IF ERRMSG EQ '' THEN ERRMSG = 'Unknown error: ':ERRNUM
 RETURN
END
ERRMSG = ''
FOR I = 1 TO N
 BEGIN CASE
  CASE RSP<I,5>
   ERRNUM = RSP<I,5>
   ERRMSGX = RSP<I,6>
   IF ERRMSGX EQ '' THEN ERRMSGX = 'Unknown error: ':ERRNUM
   ERRMSG<I> = ERRMSGX
  CASE 1
   RESULT<I> = RSP<I,4>
 END CASE
NEXT I
RETURN
*
END
