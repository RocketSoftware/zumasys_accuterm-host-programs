SUBROUTINE FTSEND(MODE,HOST.FILE,HOST.IDS,REMOTE.PATH,REMOTE.FILES,ITEM.COUNT,BYTE.COUNT,STAT)
**************************************************************************
*Copyright (c) 2007 Zumasys,Inc. as an unpublished work. All rights      *
*reserved. This work is the property of and embodies trade secrets and   *
*confidential information proprietary to Zumasys, Inc.  It may not be    *
*reproduced, copied, used, disclosed, transferred, adapted or modified   *
*without the express written approval of Zumasys, Inc., except as        *
*provided for in the accompanying warranty notice and licensing          *
*agreement.                                                              *
**************************************************************************
*
* MODULE: FTSEND
* AUTHOR: PJS
* VERSION: 5.3.1
* CREATED: 04/10/2007
* UPDATED: 06/20/2007
*
* MAINTENANCE RECORD:
*
* 5.3.1
*  PJS 06/20/2007
*   Added new MODE options: UNLIMITED, LIMIT, JOIN to override configuration
*   setting for large item handling; Y, Z to override configuration setting
*   for OEM/ANSI charaset conversion.
*
* 5.3.0
*  PJS 04/10/2007
*   Initial release
*
**************************************************************************
**************************************************************************
*
* ACCUTERM FILE TRANSFER - SEND FILE TO PC
*
**************************************************************************
**************************************************************************
*
* FTSEND() SUBROUTINE INTERFACE
*
* INPUT:  MODE         = OPTIONS SEPARATED BY COMMAS (FIRST LETTER IS SUFFICIENT):
*
*                          KERMIT - USES THE KERMIT FILE TRANSFER PROTOCOL (RECOMMENDED).
*
*                          ASCII - USES THE ASCII FILE TRANSFER PROTOCOL.
*
*                          OVERLAY - OVERWRITES EXISTING FILES
*
*                          NO OVERLAY - SKIPS EXISTING FILES
*
*                          TEXT - CONVERTS AM TO CR/LF
*
*                          BINARY - NO AM CONVERSION PERFORMED
*
*                          UNLIMITED - OVERRIDES LARGE ITEM SETTING IN CONFIG FILE
*
*                          LIMIT - OVERRIDES LARGE ITEM SETTING IN CONFIG FILE
*
*                          JOIN - OVERRIDES LARGE ITEM SETTING IN CONFIG FILE
*
*                          Y - OEM TO ANSI CHARACTER SET TRANSLATION
*
*                          Z - NO CHARACTER SET TRANSLATION
*
*                       - YOU MUST SPECIFY EITHER 'KERMIT' OR 'ASCII'
*                       - MOST OPTIONS HAVE A DEFAULT, WHICH IS STORED IN A CONFIGURATION
*                         FILE - USE THE 'FT' COMMAND TO MODIFY THE CONFIGURATION FILE
*                       - EXAMPLE: 'KERMIT,OVERLAY,TEXT' IS IDENTICAL TO 'K,O,T'
*
*         HOST.FILE    = SOURCE FILE NAME ON THE HOST
*
*         HOST.IDS     = SOURCE ITEM LIST:
*
*                          EXPLICIT ITEM-ID LIST SEPARATED BY ATTRIBUTE MARKS, OR
*
*                          '*' (ASTERISK) TO SEND ALL ITEMS, OR
*
*                          NULL TO USE ACTIVE SELECT LIST, OR
*
*                          '(SAVEDLIST' TO USE A SAVED LIST AS THE ITEM LIST
*
*         REMOTE.PATH  = TARGET DIRECTORY ON THE PC
*
*         REMOTE.FILES = TARGET FILE NAMES:
*                          EXPLICIT FILE NAME LIST SEPARATED BY ATTRIBUTE MARKS,
*                          CORRESPONDING TO EACH ITEM BEING SENT, OR NULL TO USE
*                          SOURCE ITEM-ID AS TARGET FILE NAME. THIS LIST IS USED
*                          TO RENAME THE FILES BEING SENT.
*
*
* OUTPUT:
*         ITEM.COUNT   = NUMBER OF ITEMS SENT
*         BYTE.COUNT   = NUMBER OF BYTES SENT
*         STAT         = NULL INDICATES SUCCESS, OTHERWISE ERROR MESSAGE
*
**************************************************************************
*
EQU MODES TO 'KAONTBULJYZ'
EQU MODE.SET TO '25,25,15,15,13,13,17,17,17,24,24'
EQU MODE.VAL TO '1,0,1,0,1,0,2,0,1,1,0'
*
DIM PARAMS(30),VARS(26),CLIENV(10)
*
EQU TXT.FLG.PARAM TO PARAMS(13)
EQU OVR.FLG.PARAM TO PARAMS(15)
EQU UNL.FLG.PARAM TO PARAMS(17)
EQU DIR.FLG.PARAM TO PARAMS(21)
EQU OEM.CHR.PARAM TO PARAMS(24)
EQU PRO.FLG.PARAM TO PARAMS(25)
*
EQU ICNT TO VARS(1)
EQU BCNT TO VARS(2)
EQU IDMODE TO VARS(3)
EQU ALST TO VARS(4)
EQU HDR TO VARS(5)
EQU EXP TO VARS(6)
EQU GEN TO VARS(7)
EQU PFX TO VARS(8)
EQU SID TO VARS(9)
EQU SKP TO VARS(10)
EQU FILE TO VARS(11)
EQU FNAME TO VARS(12)
EQU ID TO VARS(13)
EQU IDLST TO VARS(14)
EQU CLST TO VARS(15)
EQU IDS TO VARS(16)
EQU ISIZ TO VARS(17)
EQU ISEQ TO VARS(18)
EQU ITEM TO VARS(19)
EQU XSIZ TO VARS(20)
EQU PATH TO VARS(21)
EQU FN TO VARS(22)
EQU FNLST TO VARS(23)
EQU DFILE TO VARS(24)
EQU FNS TO VARS(25)
EQU MD TO VARS(26)
*
EQU CLI.PLATFORM TO CLIENV(1)
EQU CLI.PRODUCT TO CLIENV(2)
EQU CLI.RELEASE TO CLIENV(3)
EQU CLI.CAPAS TO CLIENV(4)
EQU CLI.SVCS TO CLIENV(5)
EQU CLI.SERIAL TO CLIENV(6)
EQU CLI.LICENSE TO CLIENV(7)
EQU CLI.USER TO CLIENV(8)
EQU CLI.VERSION TO CLIENV(9)
EQU CLI.CONFIG TO CLIENV(10)
*
NO.PAGE=@(0,0);* DISABLE PAGINATION (QM, ON)
*
**************************************************************************
*
* ENSURE FTCHK HAS BEEN RUN (OTHERWISE FTSELECT MIGHT PRINT ERROR MESASGE & STOP)
*
STAT='You must RUN FTBP FTCHK and select your host platform before FTSUB can be used!';RETURN;*#GENERIC#*
*#DEFAULT#*STAT=''
ITEM.COUNT=0
BYTE.COUNT=0
*
**************************************************************************
*
* OPEN MD
*
MAT VARS=''
OPEN 'MD' TO MD ELSE
 OPEN 'VOC' TO MD ELSE
  STAT='Unable to open MD or VOC file!'
  RETURN
 END
END
*
**************************************************************************
*
* VALIDATE CONFIGURATION & INITIALIZE PARAMETERS
*
**************************************************************************
*
CALL FTINITEX('',MAT PARAMS,MAT CLIENV,FV,STAT)
IF STAT NE '' THEN RETURN
IF CLI.PLATFORM=0 THEN
 STAT='FTSEND requires AccuTerm to run!'
 RETURN
END
IF INDEX(CLI.CAPAS,'Z',1) THEN
 STAT='Upper case / lower case inversion must be disabled to call FTSEND.'
 RETURN
END
IF INDEX(CLI.CAPAS,'D',1) = 0 THEN
 STAT='This version of AccuTerm does not support file transfers.'
 RETURN
END
*
**************************************************************************
*
* PARSE MODE ARGUMENT
*
**************************************************************************
*
P=''
I=0
LOOP
 I=I+1
 Z=OCONV(TRIM(FIELD(MODE,',',I))[1,1],'MCU')
WHILE COL2() DO
 K=INDEX(MODES,Z,1)
 IF K THEN
  J=FIELD(MODE.SET,',',K)
  IF P<ABS(J)> NE '' THEN
   READV TXT FROM FV,'FTPARAMS',ABS(J) ELSE TXT='*'
   STAT='Cannot specify more than one setting for ':FIELD(TXT,',',1):'!'
   RETURN
  END
  PARAMS(J)=FIELD(MODE.VAL,',',K)+0
  P<ABS(J)>='1'
 END
REPEAT
IF P<25> EQ '' THEN
 STAT='Kermit or ASCII protocol must be specified to FTSEND subroutine!'
 RETURN
END
*
* SETUP HOST FILE NAME & OPEN FILE
FNAME = HOST.FILE
IF FNAME[1,5] EQ 'DICT ' THEN
 OPEN FNAME TO FILE ELSE
  STAT="Unable to open file ":FNAME
  RETURN
 END
 DFILE=MD
 FNAME=FNAME[6,99]
END ELSE
 OPEN FNAME TO FILE ELSE
  STAT="Unable to open file ":FNAME
  RETURN
 END
 OPEN 'DICT',FNAME TO DFILE ELSE
  STAT="Unable to open DICT ":FNAME
  RETURN
 END
END
*
**************************************************************************
*
* SEND ITEMS
*
**************************************************************************
*
DIR.FLG.PARAM=1
SUBNAME='FTRDITMS'
* SETUP SOURCE ID LIST
IDLST=HOST.IDS
IF HOST.IDS[1,1] = '(' THEN
 * FTSELECT EXPECTS SAVED LIST FILE NAME IN ATTR 1, LIST NAME IN ATTR 2
 IDLST=FIELD(HOST.IDS,' ',1)
 IDLST<2>=FIELD(HOST.IDS,' ',2)
END ELSE
 * FTSELECT EXPECTS ATTRIBUTE-DELIMITED ID LIST, OR '*' OR NULL
 IDLST=HOST.IDS
END
* SETUP TARGET PATH & FILE LIST
PATH=REMOTE.PATH
FNLST=REMOTE.FILES
* PERFORM TRANSFER
CALL FTMODE(STAT,SUBNAME,MAT PARAMS,MAT VARS,MAT CLIENV)
ITEM.COUNT=ICNT
BYTE.COUNT=BCNT
RETURN
*
**************************************************************************
*
END
