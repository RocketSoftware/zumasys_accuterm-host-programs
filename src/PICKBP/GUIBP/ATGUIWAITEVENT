SUBROUTINE ATGUIWAITEVENT(APPID, FORMID, CTLID, EVENT, ARGS, ERRORS, STATE)
**************************************************************************
*Copyright (c) 1999-2006 Zumasys,Inc. as an unpublished work. All rights *
*reserved. This work is the property of and embodies trade secrets and   *
*confidential information proprietary to Zumasys, Inc.  It may not be    *
*reproduced, copied, used, disclosed, transferred, adapted or modified   *
*without the express written approval of Zumasys, Inc., except as        *
*provided for in the accompanying warranty notice and licensing          *
*agreement.                                                              *
**************************************************************************
*
* MODULE: ATGUIWAITEVENT
* AUTHOR: PJS
* VERSION: 5.2.1
* CREATED: 11/01/1999
* UPDATED: 06/12/2006
*
* MAINTENANCE RECORD:
*
* 5.3.1
*  PJS 06/12/2006
*   Updated to use new version of FTOBJREQ, which requires that
*   the PARAMS and CLIENV arrays be completely initialized.
*
* 5.2.1
*  PJS 10/27/2004
*   Updated for GUI version 1.2 which may return multiple events
*   in a single response. Events with arguments that have multiple
*   attributes are handled by returning the number of attributes in
*   the event in RSP<I,2,2>. Extra events are stored in the local
*   event queue and retrieved from the local queue on the next call.
*
* 4.0.1
*  PJS 09/25/2000
*   CLEANUP FOR ACCUTERM 2000 RELEASE
*
**************************************************************************
**************************************************************************
*
* ACCUTERM GUI MANAGER - WAIT FOR EVENT
*
* CALL THIS SUBROUTINE TO WAIT FOR A GUI EVENT.
*
* INPUT: none
*
* OUTPUT:
*  APPID      application identifier (use same ID when deleting app)
*  FORMID     form identifier of form being created
*  CTLID      control identifier (unique within scope of form)
*  EVENT      event code for triggered event
*  ARGS       event arguments; multiple arguments are normally
*               separated by value marks, but certain events
*               include multiple attributes
*  ERRORS     ERRORS<1> is non-zero if errors have occurred
*
* OTHER:
*  STATE      internal use only - do not modify
*
* NOTE: WHEN THIS ROUTINE RETURNS WITHOUT ERROR, YOU MUST PROCESS
* THE EVENT. IF THE EVENT IS GEQUIT, THE GUI PROGRAM HAS BEEN
* TERMINATED AND THE EVENT LOOP MUST ALSO TERMINATE. OTHERWISE,
* PROCESS THE EVENT AND CALL ATGUIWAITEVENT AGAIN. YOU MAY CALL
* OTHER ATGUI... ROUTINES WHILE PROCESSING THE EVENT.
*
**************************************************************************
*
$INCLUDE ATGUIEQUATES
EQU THISPGM TO 'ATGUIWAITEVENT'
EQU AM TO CHAR(254), VM TO CHAR(253), SVM TO CHAR(252)
DIM PARAMS(30), CLIENV(10)
ERRORS = GRSUCCESS
FOR I = 1 TO 30
 PARAMS(I) = STATE<20,I>
NEXT I
FOR I = 1 TO 10
 CLIENV(I) = STATE<20+I>
NEXT I
IF NOT(STATE<1>) THEN
 CALL ATGUIERROR(3, THISPGM, '', 0, GRFATAL, '', ERRORS)
 RETURN
END
*
* CHECK IF RECORDING MACRO
*
IF STATE<2> THEN
 CALL ATGUIERROR(2, THISPGM, '', 0, GRNOMAC, '', ERRORS)
 RETURN
END
*
* CHECK IF POSTED EVENTS
*
IF STATE<5> THEN
 ARGS = STATE<51>
 N = ARGS<1,2,2>
 STATE = DELETE(STATE, 51)
 FOR I = 2 TO N
  ARGS = ARGS : AM : STATE<51>
  STATE = DELETE(STATE, 51)
 NEXT I
 STATE<5> = STATE<5> - N
END ELSE
 *
 * SEND COMMAND TO SERVER
 *
 REC = GCWAITEVENT
 CALL FTOBJREQ('g', REC, RSP, 0, MAT PARAMS, MAT CLIENV)
 CALL ATGUIERRORS(RSP, ERRORS)
 *
 * CHECK FOR MULTIPLE EVENTS (NEW BEHAVIOR FOR GUI VERSION 1.2)
 *
 N = DCOUNT(RSP, AM)
 M = RSP<1,2,2>
 IF M > 0 AND M < N THEN
  * NEW EVENT RESPONSE MAY RETURN MULTIPLE EVENTS WITH THE
  * NUMBER OF ATTRIBUTES FOR EACH EVENT IN RSP<I,2,2>
  ARGS = ''
  FOR I = 1 TO M
   ARGS<-1> = RSP<1>
   RSP = DELETE(RSP, 1)
  NEXT I
  * POST OTHER EVENTS TO THE LOCAL EVENT QUEUE
  N = N - M
  IF N > 0 THEN
   K = 51 + STATE<5>
   STATE<K> = RSP
   K = K + N
   STATE<5> = K - 51
  END
 END ELSE
  * OLD EVENT RESPONSE IS A SINGLE EVENT THAT MAY HAVE MULTIPLE ATTRIBUTES
  ARGS = RSP
 END
END
*
* DECODE ARGUMENTS
*
ID = ARGS<1,1>
APPID = FIELD(ID, '*', 1)
FORMID = FIELD(ID, '*', 2)
CTLID = FIELD(ID, '*', 3)
ARGS = DELETE(ARGS, 1, 1)
EVENT = ARGS<1,1,1>
ARGS = DELETE(ARGS, 1, 1)
RETURN
*
END
