SUBROUTINE ATGUICREATEFORM(APPID, FORMID, EVENTMASK, CAPTION, TYPE, Left, TOP, WIDTH, HEIGHT, ERRORS, STATE)
**************************************************************************
*Copyright (c) 1999-2006 Zumasys,Inc. as an unpublished work. All rights *
*reserved. This work is the property of and embodies trade secrets and   *
*confidential information proprietary to Zumasys, Inc.  It may not be    *
*reproduced, copied, used, disclosed, transferred, adapted or modified   *
*without the express written approval of Zumasys, Inc., except as        *
*provided for in the accompanying warranty notice and licensing          *
*agreement.                                                              *
**************************************************************************
*
* MODULE: ATGUICREATEFORM
* AUTHOR: PJS
* VERSION: 5.3.1
* CREATED: 11/01/1999
* UPDATED: 06/12/2006
*
* MAINTENANCE RECORD:
*
* 5.3.1
*  PJS 06/12/2006
*   Updated to use new version of FTOBJREQ, which requires that
*   the PARAMS and CLIENV arrays be completely initialized.
*
* 5.2.1
*  PJS 11/15/2004
*   Allow non-child forms on MDI apps (gxSDIFixed, gxSDISizable form types)
*
* 4.0.1
*  PJS 09/25/2000
*   CLEANUP FOR ACCUTERM 2000 RELEASE
*
**************************************************************************
**************************************************************************
*
* ACCUTERM GUI MANAGER - CREATE FORM
*
* CALL THIS SUBROUTINE TO CREATE A GUI FORM.
*
* INPUT:
*  APPID      application identifier (use same ID when deleting app)
*  FORMID     form identifier of form being created
*  EVENTMASK  all forms must specify GECLOSE
*  CAPTION    form caption
*  TYPE       type of form: 0=fixed size form, 1=resizable form, 
*               2=modal dialog box, 4=SDI fixed, 5=SDI sizable. 
*  Left       horizontal position of the form relative to the
*               screen (SDI) or the MDI main window (MDI)
*  TOP        vertical position of the form relative to the
*               screen (SDI) or the MDI main window (MDI)
*  WIDTH      width of the form
*  HEIGHT     height of the form
*
* OUTPUT:
*  ERRORS     ERRORS<1> is non-zero if errors have occurred
*
* OTHER:
*  STATE      internal use only - do not modify
*
**************************************************************************
*
$INCLUDE ATGUIEQUATES
EQU THISPGM TO 'ATGUICREATEFORM'
EQU AM TO CHAR(254), VM TO CHAR(253), SVM TO CHAR(252)
DIM PARAMS(30), CLIENV(10)
ERRORS = GRSUCCESS
FOR I = 1 TO 30
 PARAMS(I) = STATE<20,I>
NEXT I
FOR I = 1 TO 10
 CLIENV(I) = STATE<20+I>
NEXT I
IF NOT(STATE<1>) THEN
 CALL ATGUIERROR(3, THISPGM, '', 0, GRFATAL, '', ERRORS)
 RETURN
END
*
* VALIDATE PARAMETERS
*
IF APPID EQ '' OR FORMID EQ '' THEN
 CALL ATGUIERROR(2, THISPGM, APPID, '', GRNOID, '', ERRORS)
 RETURN
END
BEGIN CASE
 CASE TYPE EQ 0
  FORMTYPE = GXFORMFIXED
 CASE TYPE EQ 1
  FORMTYPE = GXFORMSIZABLE
 CASE TYPE EQ 2
  FORMTYPE = GXDIALOG
 CASE TYPE EQ 4
  FORMTYPE = GXSDIFIXED
 CASE TYPE EQ 5
  FORMTYPE = GXSDISIZABLE
 CASE 1
  CALL ATGUIERROR(2, THISPGM, FORMID, 'TYPE', GRINVARG, '', ERRORS)
  RETURN
END CASE
REC = GCCREATE : VM : APPID : '*' : FORMID : VM : VM : FORMTYPE : VM : Left : VM : TOP : VM : WIDTH : VM : HEIGHT : VM : EVENTMASK
IF CAPTION NE '' THEN
 REC = REC : AM : GCSETPROP : VM : VM : GPCAPTION : VM :VM : VM : CAPTION
END
*
* CHECK IF RECORDING MACRO
*
IF STATE<2> THEN
 STATE = STATE : AM : REC ;* APPEND TO MACRO
 RETURN
END
*
* SEND COMMAND TO SERVER
*
CALL FTOBJREQ('g', REC, RSP, 0, MAT PARAMS, MAT CLIENV)
CALL ATGUIERRORS(RSP, ERRORS)
RETURN
*
END
